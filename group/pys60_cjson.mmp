/*
============================================================================
 Name		: pys60_cjson.mmp
 Author	  : AGProjects
 Copyright   : Copyright (C) 2006-2017
Dan Pascu

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software Foundation,
Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
 Description : This is the project specification file for pys60_cjson.
============================================================================
*/

TARGET		  cjson.pyd
TARGETTYPE	  dll
UID			 0x1000008d 0xE867D20B

USERINCLUDE	 ..\inc
SYSTEMINCLUDE   \epoc32\include \epoc32\include\python \epoc32\include\libc \Epoc32\release\winscw\udeb

SOURCEPATH	  ..\src

SOURCE		  pys60_cjson.cpp

// In order to use .def files to freeze code you must use one or more DEFFILE lines;
// see the ones commented out below for examples.
// By default, the build tools look for the WINSCW def file in a BWINS directory
// (at the same level as the directory containing the mmp file), 
// the GCC ARM def file in a BMARM directory, and the ARMV5 def file in a EABI directory. 
// If your .def files are stored in these default locations, you can simply specify the
// .def filename(s) with no path. If you want to store .def files in non-default 
// locations, you will need to specify the paths in the DEFFILE statement(s).

//The following commented out code shows how the build system uses the implicit
// location for defiles. To create the DEF files Choose Project > Freeze Exports from Carbide
// or run 'abld freeze' from the command-line
//#if defined (WINS)
//  DEFFILE ..\bwins\pys60_cjson.def
//#elif defined (GCC32)
//  DEFFILE ..\bmarm\pys60_cjson.def
//#else 
//  DEFFILE ..\eabi\pys60_cjson.def
//#endif

nostrictdef

LIBRARY		 euser.lib python222.lib python_appui.lib estlib.lib

#ifdef ENABLE_ABIV2_MODE
DEBUGGABLE_UDEBONLY
#endif

CAPABILITY LocalServices Location NetworkServices PowerMgmt ProtServ ReadDeviceData ReadUserData SurroundingsDD SwEvent TrustedUI UserEnvironment WriteDeviceData WriteUserData

